/*
 * Copyright (c) 2015 - 2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef __VIDEO_DEVICE_DESCRIPTOR_H__
#define __VIDEO_DEVICE_DESCRIPTOR_H__

#include "usb_device_video.h"

/*******************************************************************************
 * Definitions
 ******************************************************************************/
#if defined(USB_DEVICE_VIDEO_CLASS_VERSION_1_5) && (USB_DEVICE_VIDEO_CLASS_VERSION_1_5 > 0U)

#define USB_DEVICE_VIDEO_SPECIFIC_BCD_VERSION (0x0150U)
#define USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL USB_DEVICE_VIDEO_PC_PROTOCOL_15

#elif defined(USB_DEVICE_VIDEO_CLASS_VERSION_1_1) && (USB_DEVICE_VIDEO_CLASS_VERSION_1_1 > 0U)

#define USB_DEVICE_VIDEO_SPECIFIC_BCD_VERSION (0x0110U)
#define USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED

#else

#define USB_DEVICE_VIDEO_SPECIFIC_BCD_VERSION (0x0100U)
#define USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED

#endif

#define USB_DESCRIPTOR_LENGTH_INTERFACE_ASSOCIATION (0x08U)

#define USB_VIDEO_VIRTUAL_CAMERA_CONTROL_INTERFACE_COUNT (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_CONTROL_INTERFACE_INDEX (4U)
#define USB_VIDEO_VIRTUAL_CAMERA_CONTROL_ENDPOINT_COUNT (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_CONTROL_ENDPOINT (5U)

#define HS_INTERRUPT_IN_PACKET_SIZE (16U)
#define FS_INTERRUPT_IN_PACKET_SIZE (8U)
#define HS_INTERRUPT_IN_INTERVAL (0x06U) /* 2^(6-1) = 4ms */
#define FS_INTERRUPT_IN_INTERVAL (0x08U)

#define USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_HEADER_LENGTH (0x0DU)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_OUTPUT_TERMINAL_LENGTH (0x09U)

#if defined(USB_DEVICE_VIDEO_CLASS_VERSION_1_5) && (USB_DEVICE_VIDEO_CLASS_VERSION_1_5 > 0U)

#define USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_LENGTH (0x0DU)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_LENGTH (0x12U)

#elif defined(USB_DEVICE_VIDEO_CLASS_VERSION_1_1) && (USB_DEVICE_VIDEO_CLASS_VERSION_1_1 > 0U)

#define USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_LENGTH (0x0CU)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_LENGTH (0x12U)

#else

#define USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_LENGTH (0x0BU)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_LENGTH (0x12U)

#endif

#define USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_TOTAL_LENGTH                                                     \
    (USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_HEADER_LENGTH + USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_LENGTH + \
     USB_VIDEO_VIRTUAL_CAMERA_VC_OUTPUT_TERMINAL_LENGTH + USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_LENGTH)


#define USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_COUNT (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_INDEX (5U)
#define USB_VIDEO_VIRTUAL_CAMERA_STREAM_ENDPOINT_COUNT (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_STREAM_ENDPOINT_IN (4U)
#define ONE_UFRAME_PKT_COUNT    (3u)

#if (UVC_FRAME_SIZE == 1u)
#define HS_STREAM_IN_PACKET_SIZE (804 | ((ONE_UFRAME_PKT_COUNT - 1u) << 11u))
#endif
#if (UVC_FRAME_SIZE == 2u)
#define HS_STREAM_IN_PACKET_SIZE (814 | ((ONE_UFRAME_PKT_COUNT - 1u) << 11u))
#endif
#if (UVC_FRAME_SIZE == 3u)
#define HS_STREAM_IN_PACKET_SIZE (824 | ((ONE_UFRAME_PKT_COUNT - 1u) << 11u))
#endif
#if (UVC_FRAME_SIZE == 4u)
#define HS_STREAM_IN_PACKET_SIZE (824 | ((ONE_UFRAME_PKT_COUNT - 1u) << 11u))
#endif
                /* Bit[12:11] == MULT indicating the #Pkts per uFrame;
                   00 ==> 1 transaction per uFrame, 01 ==> 2, 10 ==> 3, 11 ==> Reserved */
#define FS_STREAM_IN_PACKET_SIZE (512U)


#define USB_VIDEO_VIRTUAL_CAMERA_STREAM_STILL_CAPTURE_METHOD (0x02U)
#define USB_VIDEO_VIRTUAL_CAMERA_STREAM_STILL_CAPTURE_TRIGGER_SUPPOTED (0x00U)

#define USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_HEADER_LENGTH (0x0EU)

#define USB_VIDEO_VIRTUAL_CAMERA_CLOCK_FREQUENCY (15000000U) /* 15MHz */

#define HS_STREAM_IN_INTERVAL (0x01U) /* 2^(1-1) = 125 uSec */
#define FS_STREAM_IN_INTERVAL (0x01U)

#define USB_VIDEO_UNCOMPRESSED_FORMAT_DESCRIPTOR_LENGTH			(27)
#define USB_VIDEO_UNCOMPRESSED_FRAME_DESCRIPTOR_LENGTH			(30)
#define USB_VIDEO_UNCOMPRESSED_COLOR_FORMAT_DESCRIPTOR_LENGTH	(6)

#define USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_TOTAL_LENGTH                                            \
    (USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_HEADER_LENGTH + USB_VIDEO_UNCOMPRESSED_FORMAT_DESCRIPTOR_LENGTH + \
     USB_VIDEO_UNCOMPRESSED_FRAME_DESCRIPTOR_LENGTH + USB_VIDEO_UNCOMPRESSED_COLOR_FORMAT_DESCRIPTOR_LENGTH)

#define USB_VIDEO_VIRTUAL_CAMERA_INTERFACE_COUNT \
    (USB_VIDEO_VIRTUAL_CAMERA_CONTROL_INTERFACE_COUNT + USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_COUNT)

/* Stream format */
#define USB_VIDEO_VIRTUAL_CAMERA_CV_ENDPOINT_DESC_LENGTH	0x05u

#define USB_VIDEO_VIRTUAL_CAMERA_FORMAT_COUNT (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FORMAT_INDEX (1U)

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_DESCRIPTOR_COUNT (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_INDEX (1U)

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_YUY2_BITSPERPIXEL	(16u)

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_ASPECTRATIO_X	(0u)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_ASPECTRATIO_Y	(0u)

#if (UVC_FRAME_SIZE == 1u)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH (640U)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT (480U)
#endif
#if (UVC_FRAME_SIZE == 2u)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH (648U)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT (480U)
#endif
#if (UVC_FRAME_SIZE == 3u)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH (656U)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT (510U)
#endif
#if (UVC_FRAME_SIZE == 4u)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH (656U)
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT (480U)
#endif

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_DEFAULT_INTERVAL		333333u
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MIN_INTERVAL			333333u
#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_INTERVAL			333333u

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_FRAME_SIZE			\
	(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH *	\
			USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT	* 2)

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_BIT_RATE         	\
    (USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_FRAME_SIZE * 30 * 8) /* 640*480*2*30*8 */

#define USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MIN_BIT_RATE	USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_BIT_RATE

#define	USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_SIZE_PER_uFRAME \
    ((ONE_UFRAME_PKT_COUNT * (HS_STREAM_IN_PACKET_SIZE & 0x7FFu)) - 12u)

#define USB_VIDEO_PRIMING_BUFSIZE   \
    (ONE_UFRAME_PKT_COUNT * (HS_STREAM_IN_PACKET_SIZE & 0x7FFu))

/* terminal unit ID */
#define USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_ID (1U)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_TYPE (USB_DEVICE_VIDEO_ITT_CAMERA)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_OUTPUT_TERMINAL_ID (2U)
#define USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_ID (3U)


#define TOTAL_VIDEO_DESCRIPTOR_LENGTH	(USB_DESCRIPTOR_LENGTH_INTERFACE_ASSOCIATION +	\
										 USB_DESCRIPTOR_LENGTH_INTERFACE +	\
										 USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_HEADER_LENGTH +	\
										 USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_LENGTH +	\
										 USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_LENGTH +	\
										 USB_VIDEO_VIRTUAL_CAMERA_VC_OUTPUT_TERMINAL_LENGTH +	\
										 USB_DESCRIPTOR_LENGTH_ENDPOINT +	\
										 USB_VIDEO_VIRTUAL_CAMERA_CV_ENDPOINT_DESC_LENGTH +	\
										 USB_DESCRIPTOR_LENGTH_INTERFACE +	\
										 USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_HEADER_LENGTH +	\
										 USB_VIDEO_UNCOMPRESSED_FORMAT_DESCRIPTOR_LENGTH +	\
										 USB_VIDEO_UNCOMPRESSED_FRAME_DESCRIPTOR_LENGTH +	\
										 USB_VIDEO_UNCOMPRESSED_COLOR_FORMAT_DESCRIPTOR_LENGTH +	\
										 USB_DESCRIPTOR_LENGTH_INTERFACE +	\
										 USB_DESCRIPTOR_LENGTH_ENDPOINT)


#define VIDEO_DESCRIPTOR_DATA \
	/* Interface Association Descriptor */  \
	USB_DESCRIPTOR_LENGTH_INTERFACE_ASSOCIATION,    \
	USB_DESCRIPTOR_TYPE_INTERFACE_ASSOCIATION,  \
	USB_VIDEO_VIRTUAL_CAMERA_CONTROL_INTERFACE_INDEX,	/* bFirstInterface */	\
	USB_VIDEO_VIRTUAL_CAMERA_INTERFACE_COUNT,	/* bInterfaceCount */	\
	0x0e, 0x03, \
	USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED, /* USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL, */   \
	0x06,   \
    \
	/* Interface Descriptor */  \
	USB_DESCRIPTOR_LENGTH_INTERFACE,    \
	USB_DESCRIPTOR_TYPE_INTERFACE,  \
	USB_VIDEO_VIRTUAL_CAMERA_CONTROL_INTERFACE_INDEX,	/*  */	\
	0x00, 0x01, 0x0e, 0x01,   \
	USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED, /* USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL, */   \
	0x0C,   \
    \
	/* Video Control Interface Descriptor [Header] */   \
	USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_HEADER_LENGTH,    \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x01,   \
	USB_SHORT_GET_LOW(USB_DEVICE_VIDEO_SPECIFIC_BCD_VERSION), USB_SHORT_GET_HIGH(USB_DEVICE_VIDEO_SPECIFIC_BCD_VERSION),    \
	USB_SHORT_GET_LOW(USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_TOTAL_LENGTH), USB_SHORT_GET_HIGH(USB_VIDEO_VIRTUAL_CAMERA_VC_INTERFACE_TOTAL_LENGTH),  \
	    /* wTotalLength (Sum of All the Descriptor Lenth Till Endpoint Descriptor) */   \
	0xc0, 0xe1, 0xe4, 0x00,	\
	USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_COUNT,	\
	USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_INDEX, \
    \
	/* Video Control Interface Descriptor Input Terminal */ \
	USB_VIDEO_VIRTUAL_CAMERA_VC_INPUT_TERMINAL_LENGTH,  \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x02, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00,   \
	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, \
	0x00, 0x00, 0x00, /* bmControls */  \
    \
	/* Video Control Interface Descriptor Processing Unit */    \
	USB_VIDEO_VIRTUAL_CAMERA_VC_PROCESSING_UNIT_LENGTH, \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x05, 0x02, 0x01, 0x00, 0x00,   \
/* #if defined(USB_DEVICE_VIDEO_CLASS_VERSION_1_5) && (USB_DEVICE_VIDEO_CLASS_VERSION_1_5 > 0U) */	\
	0x03,	/* bControlSize */  \
	0x00,0x00,0x00, /* bmControls */    \
	0x00,	/* iProcessing */   \
	0x00,	/* bmVideoStandards */  \
/* #else */	\
/*	0x02, */	/* bControlSize */  \
/*	0x00, 0x00, */ /* bmControls */    \
/*	0x00, */	/* iProcesssing */  \
/* #endif */	\
    \
	/* Video Control Interface Descriptor Output Terminal */    \
	USB_VIDEO_VIRTUAL_CAMERA_VC_OUTPUT_TERMINAL_LENGTH, \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x03, 0x03, 0x01, 0x01, 0x00, 0x04, 0x00,   \
    \
	/* Endpoint Descriptor */   \
	USB_DESCRIPTOR_LENGTH_ENDPOINT, \
	USB_DESCRIPTOR_TYPE_ENDPOINT,   \
	USB_VIDEO_VIRTUAL_CAMERA_CONTROL_ENDPOINT | (USB_IN << USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_SHIFT), /* Endpoint address */ \
	USB_ENDPOINT_INTERRUPT, \
	HS_INTERRUPT_IN_PACKET_SIZE,0x00,   \
	HS_INTERRUPT_IN_INTERVAL,   \
    \
	/* Video Control Endpoint Descriptor [Interrupt] */ \
	USB_VIDEO_VIRTUAL_CAMERA_CV_ENDPOINT_DESC_LENGTH,   \
	0x25, 0x03, 0x10, 0x00, \
    \
	/* Interface Descriptor */  \
	USB_DESCRIPTOR_LENGTH_INTERFACE,    \
	USB_DESCRIPTOR_TYPE_INTERFACE,  \
	USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_INDEX,	/* bInterfaceNumber */	\
	0x00,	/* bAlternateSettings */	\
	0x00, 0x0e, 0x02,   \
	USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED, /* USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL, */   \
	0x0D,   \
    \
	/* Video Streaming Interface Descriptor [Input Header] */   \
	USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_HEADER_LENGTH,    \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x01,   \
	0x01,   \
	USB_SHORT_GET_LOW(USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_TOTAL_LENGTH), USB_SHORT_GET_HIGH(USB_VIDEO_VIRTUAL_CAMERA_VS_INTERFACE_TOTAL_LENGTH),  \
	USB_VIDEO_VIRTUAL_CAMERA_STREAM_ENDPOINT_IN | (USB_IN << USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_SHIFT), /* Streaming Interface EP */ \
	0x00, 0x03, 0x02, 0x01, 0x00, 0x01, 0x00,   \
    \
	/* Video Streaming Interface Descriptor [Format Uncompressed] */    \
	USB_VIDEO_UNCOMPRESSED_FORMAT_DESCRIPTOR_LENGTH,    \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x04, 0x01, \
	0x01, 	/* NumFrameDescriptors */   \
	0x59, 0x55, 0x59, 0x32, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71, \
	0x10, 0x01, 0x00, 0x00, 0x00, 0x00, \
    \
	/* Video Streaming Interface Descriptor [Frame Uncompressed - 640 x 480 ] */    \
	USB_VIDEO_UNCOMPRESSED_FRAME_DESCRIPTOR_LENGTH, \
\
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x05, 0x01, 0x00,\
	USB_SHORT_GET_LOW(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH),\
	USB_SHORT_GET_HIGH(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_WIDTH),\
	USB_SHORT_GET_LOW(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT),\
	USB_SHORT_GET_HIGH(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_HEIGHT),\
\
	USB_LONG_GET_BYTE0(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MIN_BIT_RATE), /* MinBitRate */  \
	USB_LONG_GET_BYTE1(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MIN_BIT_RATE),   \
	USB_LONG_GET_BYTE2(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MIN_BIT_RATE),   \
	USB_LONG_GET_BYTE3(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MIN_BIT_RATE),   \
	USB_LONG_GET_BYTE0(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_BIT_RATE),	/* MaxBitRate */    \
	USB_LONG_GET_BYTE1(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_BIT_RATE),   \
	USB_LONG_GET_BYTE2(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_BIT_RATE),   \
	USB_LONG_GET_BYTE3(USB_VIDEO_VIRTUAL_CAMERA_UNCOMPRESSED_FRAME_MAX_BIT_RATE),   \
	0x00, 0x60, 0x09, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01,   \
	0x15, 0x16, 0x05, 0x00, \
    \
	/* Video Streaming Interface Descriptor [ Color Format ] */ \
	USB_VIDEO_UNCOMPRESSED_COLOR_FORMAT_DESCRIPTOR_LENGTH, \
	USB_DESCRIPTOR_TYPE_VIDEO_CS_INTERFACE, \
	0x0d, 0x01, 0x01, 0x04, \
    \
	/* Interface Descriptor */  \
	USB_DESCRIPTOR_LENGTH_INTERFACE,    \
	USB_DESCRIPTOR_TYPE_INTERFACE,  \
	USB_VIDEO_VIRTUAL_CAMERA_STREAM_INTERFACE_INDEX,	/* bInterfaceNumber */	\
	0x01,	/* bAlternateSettings */	\
	0x01, 0x0e, \
	0x02,   \
	USB_DEVICE_VIDEO_PC_PROTOCOL_UNDEFINED, /* USB_DEVICE_VIDEO_VIRTUAL_CAMERA_PROTOCOL, */   \
	0x0E,   \
    \
	/* Endpoint Descriptor */   \
	USB_DESCRIPTOR_LENGTH_ENDPOINT, \
	USB_DESCRIPTOR_TYPE_ENDPOINT,   \
    USB_VIDEO_VIRTUAL_CAMERA_STREAM_ENDPOINT_IN | (USB_IN << USB_DESCRIPTOR_ENDPOINT_ADDRESS_DIRECTION_SHIFT),  \
    USB_ENDPOINT_ISOCHRONOUS | USB_DESCRIPTOR_ENDPOINT_ATTRIBUTE_SYNC_TYPE_ASYNC,   \
	USB_SHORT_GET_LOW(HS_STREAM_IN_PACKET_SIZE), USB_SHORT_GET_HIGH(HS_STREAM_IN_PACKET_SIZE),  \
	HS_STREAM_IN_INTERVAL

#endif /* __USB_DEVICE_DESCRIPTOR_H__ */
